// RUN: %target-swift-frontend %s -sil-verify-all -g -emit-sil -o - | %FileCheck --check-prefix=CHECK-SIL %s
// RUN: %target-swift-frontend -disable-debugger-shadow-copies -primary-file %s -emit-ir -g -o - | %FileCheck %s
import Builtin
import Swift

struct MyStruct {
  var x: Builtin.Int64
  var y: Builtin.Int64
}

sil_scope 1 { loc "file.swift":7:6 parent @test_fragment : $@convention(thin) () -> () }

sil hidden @test_fragment : $@convention(thin) () -> () {
bb0:
  %2 = alloc_stack $MyStruct, var, name "my_struct", loc "file.swift":8:9, scope 1
  // CHECK: %[[MY_STRUCT:.+]] = alloca %{{.*}}MyStruct
  // CHECK: llvm.dbg.declare(metadata {{.*}}* %[[MY_STRUCT]], metadata ![[VAR_DECL_MD:[0-9]+]]
  %3 = struct_element_addr %2 : $*MyStruct, #MyStruct.x, loc "file.swift":9:17, scope 1
  // CHECK: %[[FIELD_X:.*]] = getelementptr {{.*}} %[[MY_STRUCT]]
  // CHECK-SIL: debug_value_addr %{{[0-9]+}} : $*Builtin.Int64
  // CHECK-SIL-SAME:            (name "my_struct", loc "file.swift":8:9, scope {{[0-9]+}})
  // CHECK-SIL-SAME             type $MyStruct, expr op_fragment:#MyStruct.x
  debug_value_addr %3 : $*Builtin.Int64, var, (name "my_struct", loc "file.swift":8:9, scope 1), type $MyStruct, expr op_fragment:#MyStruct.x, loc "file.swift":9:17, scope 1
  // CHECK: llvm.dbg.value(metadata {{.*}}* %[[FIELD_X]], metadata ![[VAR_DECL_MD]]
  // CHECK-SAME:           !DIExpression(DW_OP_deref, DW_OP_LLVM_fragment, 0, 64)
  // CHECK-NOT:           ), !dbg ![[VAR_DECL_MD]]
  dealloc_stack %2 : $*MyStruct
  %r = tuple()
  return %r : $()
}
